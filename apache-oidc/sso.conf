# Load required apache modules
LoadModule auth_openidc_module modules/mod_auth_openidc.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

# support Environment variable to configure oidc module
OIDCProviderMetadataURL ${OIDC_PROVIDER_METADATA_URL}
OIDCSSLValidateServer Off
# ARTTUUNNG (mettre un ssl et supprimer cette merde)
OIDCClientID ${OIDC_CLIENT_ID}
OIDCClientSecret ${OIDC_CLIENT_SECRET}
OIDCRedirectURI /redirect_oidc
OIDCCryptoPassphrase ${OIDC_CRYPTO_PASSPHRASE}

ServerName ${DOMAIN}

# Redirect all HTTP to HTTPS
<VirtualHost *:80>
    RewriteEngine On
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=302,L]
</VirtualHost>

# Protect root path
<VirtualHost *:443>

    SSLEngine on
	SSLCertificateFile    /usr/local/apache2/conf/server.crt
	SSLCertificateKeyFile  /usr/local/apache2/conf/server.key

    <Location /auth>
        ProxyPreserveHost On

        ProxyPass "http://keycloak:8080"
        ProxyPassReverse "http://keycloak:8080"
    </Location>

    <Location /redirect_oidc>
        AuthType openid-connect
        Require valid-user
    </Location>

    <Location /public-api>
        ProxyPreserveHost On
        ProxyPass "http://api-get-express:3000"
        ProxyPassReverse "http://api-get-express:3000"
    </Location>

    <Location /private-api>
        ProxyPreserveHost On

        AuthType openid-connect
        require valid-user
        ProxyPass "http://api-python:5001"
        ProxyPassReverse "http://api-python:5001"
    </Location>

#     <Location /private-api>
#         ProxyPreserveHost On
#
#         AuthType openid-connect
#         Require claim resource_access.apache-oidc.roles:admin-role
#         ProxyPass "http://java-app:8080/"
#         ProxyPassReverse "http://java-app:8080/"
#      </Location>
</VirtualHost>




