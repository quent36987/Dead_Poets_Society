version: '3'

services:
  # Public API to get any data from the database
  api-get-express:
    build: ./api-get-express/
    image: api-get-express
    container_name: api-get-express
    restart: unless-stopped
    depends_on:
      - postgresql
    ports:
      - 3000:3000
    networks:
        - bdd

  # Private API who work with the keycloak server to authenticate the user and modify the database
  api-python:
    build: api-python/
    image: api-python
    container_name: api-python
    restart: unless-stopped
    depends_on:
        - postgresql
        - keycloak
        - api-get-express
    networks:
      - bdd
      - keycloak
    ports:
      - 5001:5001

  # Database to store all the data
  postgresql:
    image: postgres:14.1-alpine
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    networks:
      - bdd

  # Keycloak server to authenticate the user
  keycloak:
    image: jboss/keycloak:latest
    restart: on-failure
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=password
      - DB_VENDOR=postgres
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_ADDR=keycloak-db
      - DB_PORT=5432
      - DB_DATABASE=keycloakdb
      - PROXY_ADDRESS_FORWARDING=true
    depends_on:
      - keycloak-db
    ports:
        - 8080:8080
    networks:
      - keycloak

  keycloak-db:
    image: postgres:10
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloakdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - keycloak


volumes:
  # Volume to store keycloak config
  pgdata:

  # Volume to store the database
  db:
    driver: local

networks:
    # Network to connect the api and the database
    bdd:

    # Network to connect the api to keycloak
    keycloak:


